<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  autoReload="true"
	  throwConfigExceptions="true"
	  internalLogLevel="Warn"
	  internalLogFile="c:\temp\Chat-internal-nlog.txt"
	  >

	<!--nlog.config Example-->
	<!--https://gist.github.com/kkbruce/1b898476b523a916574a3029387d42ab-->

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!--[變數] 文字樣板 -->
	<variable name="allfileLayout" value="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=type,message,method:maxInnerExceptionLevel=5:innerFormat=shortType,message,method}"/>
	<variable name="ownFileWebLayout" value="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|"/>
	<variable name="lifetimeConsoleLayout" value="${level:truncate=4:lowercase=true}: ${logger}[0]${newline}      ${message}${exception:format=tostring}"/>

	<!--[變數] -->
	<variable name="BlackHoleLogLevel" value="info"/>
	<variable name="EntityFrameworkMinlevel" value="off"/>
	<variable name="LogRootPath" value="C:\temp"/>
	<variable name="AllLogMessagesFilename" value="AllLog"/>
	<variable name="AllWebDetailsLogMessagesFilename" value="AllWeb"/>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<!--<target xsi:type="File" name="allfile" 
				fileName="${var:LogRootPath}\${var:AllLogMessagesFilename}.log"
				layout="${allfileLayout}"
				maxArchiveFiles="7"
				archiveDateFormat="yyyy-MM-dd"
				archiveNumbering="Date"
				archiveFileName="${var:LogRootPath}/${var:AllLogMessagesFilename}-{##}.log"
				encoding="utf-8"
				archiveAboveSize="2097152"
				archiveEvery="Day"
				concurrentWrites="true"
				keepFileOpen="true"
				/>-->

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web"
				fileName="${var:LogRootPath}/${var:AllWebDetailsLogMessagesFilename}.log"
				layout="${ownFileWebLayout}"
				maxArchiveFiles="10"
				archiveDateFormat="yyyy-MM-dd"
				archiveNumbering="Date"
				archiveFileName="${var:LogRootPath}/${var:AllWebDetailsLogMessagesFilename}-{##}.log"
				encoding="utf-8"
				archiveAboveSize="2097152"
				archiveEvery="Day"
				concurrentWrites="true"
				keepFileOpen="true"
				/>

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole"
				layout="${lifetimeConsoleLayout}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--Output hosting lifetime messages to console target for faster startup detection-->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info"
				writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" minlevel="Info" final="true" />

		<!--BlackHole-->
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="${var:BlackHoleLogLevel}"
				writeTo="lifetimeConsole, ownFile-web" />
	</rules>


	<!--The Microsoft Logging filters specified in appsettings.json 
	are ignored by default when using NLog 5.0. Just make sure 
	that NLog configuration rules are configured correctly.-->

	<rules>

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" final="true"
				writeTo="lifetimeConsole, ownFile-web" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.EntityFrameworkCore.*" final="true"
				minlevel="${var:EntityFrameworkMinlevel}"
				writeTo="lifetimeConsole, ownFile-web"/>

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true"/>

		<!--All logs, including from Microsoft-->
		<!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->

		<!--Logging other remain  log (BlackHole)-->
		<logger name="*" minlevel="${var:BlackHoleLogLevel}"
				writeTo="lifetimeConsole, ownFile-web" />
	</rules>
</nlog>