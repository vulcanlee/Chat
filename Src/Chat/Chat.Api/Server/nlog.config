<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  autoReload="true"
	  throwConfigExceptions="true"
	  internalLogLevel="Warn"
	  internalLogFile="c:\temp\Chat-internal-nlog.txt"
	  >

	<!--nlog.config Example-->
	<!--https://gist.github.com/kkbruce/1b898476b523a916574a3029387d42ab-->

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!--[變數] 文字樣板 -->
	<variable name="allfileLayout" value="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}"/>
	<variable name="FileWebLayout" value="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|"/>
	<variable name="lifetimeConsoleLayout" value="${event-properties:item=EventId:whenEmpty=0} ${level:truncate=4:lowercase=true}: ${logger}[0]${newline}      ${message}${exception:format=tostring}"/>

	<!--[變數] -->
	<variable name="BlackHoleLogLevel" value="Warn"/>
	<variable name="EngineerLogLevel" value="info"/>
	<variable name="EntityFrameworkMinlevel" value="off"/>
	<variable name="LogRootPath" value="C:\temp"/>
	<variable name="AllLogMessagesFilename" value="AllLog"/>
	<variable name="AllWebDetailsLogMessagesFilename" value="AllWeb"/>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<!--<target xsi:type="File" name="allfile" 
				fileName="${var:LogRootPath}\${var:AllLogMessagesFilename}.log"
				layout="${allfileLayout}"
				maxArchiveFiles="7"
				archiveDateFormat="yyyy-MM-dd"
				archiveNumbering="Date"
				archiveFileName="${var:LogRootPath}/${var:AllLogMessagesFilename}-{##}.log"
				encoding="utf-8"
				archiveAboveSize="2097152"
				archiveEvery="Day"
				concurrentWrites="true"
				keepFileOpen="true"
				/>-->

		<target xsi:type="File" name="FileWeb"
				fileName="${var:LogRootPath}/${var:AllWebDetailsLogMessagesFilename}.log"
				layout="${FileWebLayout}"
				maxArchiveFiles="10"
				archiveDateFormat="yyyy-MM-dd"
				archiveNumbering="Date"
				archiveFileName="${var:LogRootPath}/${var:AllWebDetailsLogMessagesFilename}-{##}.log"
				encoding="utf-8"
				archiveAboveSize="2097152"
				archiveEvery="Day"
				concurrentWrites="true"
				keepFileOpen="true"
				/>

		<target name="AsyncWrapperFileWeb" xsi:type="AsyncWrapper" queueLimit="500000" overflowAction="Discard">
			<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
			<target xsi:type="File"
					fileName="${var:LogRootPath}/${var:AllWebDetailsLogMessagesFilename}.log"
					layout="${allfileLayout}"
					maxArchiveFiles="10"
					archiveDateFormat="yyyy-MM-dd"
					archiveNumbering="Date"
					archiveFileName="${var:LogRootPath}/${var:AllWebDetailsLogMessagesFilename}-{##}.log"
					encoding="utf-8"
					archiveAboveSize="2097152"
					archiveEvery="Day"
					concurrentWrites="true"
					keepFileOpen="true"
				/>
		</target>

		<target name="AsyncWrapperLifetimeConsole" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
			<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
			<target xsi:type="Console"
					layout="${lifetimeConsoleLayout}" />
		</target>

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole"
				layout="${lifetimeConsoleLayout}" />
	</targets>

	<!--The Microsoft Logging filters specified in appsettings.json 
	are ignored by default when using NLog 5.0. Just make sure 
	that NLog configuration rules are configured correctly.-->

	<rules>

		<!-- 若有關於  Microsoft.Hosting.Lifetime 之 Info 以上之 Log ，寫入且停止處理後續規則 -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" final="true"
				writeTo="AsyncWrapperLifetimeConsole,AsyncWrapperFileWeb" />

		<!--可以使用設定變數，決定是否要寫入關於 EntityFramework 相關的 Log，，寫入且停止處理後續規則 -->
		<logger name="Microsoft.EntityFrameworkCore.*" final="true"
				minlevel="${var:EntityFrameworkMinlevel}"
				writeTo="AsyncWrapperFileWeb"/>

		<!-- 跳過非關鍵的 Microsoft 日誌，因此只記錄自己的日誌 (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true"/>

		<!-- 記錄所有非關鍵的 Microsoft 日誌 -->
		<!--<logger name="Microsoft.*" minlevel="Info" final="true"
				writeTo="AsyncWrapperLifetimeConsole,AsyncWrapperFileWeb"/>-->

		<!-- 針對工程模式的訊息，要來寫入到 日誌內 
		(原則上前面擋掉許多日誌，因此，這裡將會寫入該程式的 info 以下層級的 Log) -->
		<logger name="*" maxlevel="${var:EngineerLogLevel}" final="true"
				writeTo="AsyncWrapperFileWeb" />

		<!-- 記錄其他保留日誌，原則上是 Warn 以上的日誌要寫入 (BlackHole)-->
		<logger name="*" minlevel="${var:BlackHoleLogLevel}"
				writeTo="AsyncWrapperLifetimeConsole,AsyncWrapperFileWeb" />
	</rules>
</nlog>